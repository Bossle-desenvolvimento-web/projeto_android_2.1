/ *! jQuery Migrate v1.4.1 | (c) Fundação jQuery e outros contribuidores | jquery.org/license * /
"undefined" == typeof jQuery.migrateMute && (jQuery.migrateMute =! 0), função (a, b, c) {function d (c) {var d = b.console; f [c] || (f [c ] =! 0, a.migrateWarnings.push (c), d && d.warn &&! A.migrateMute && (d.warn ("JQMIGRATE:" + c), a.migrateTrace && d.trace && d.trace ()))} função e (b , c, e, f) {if (Object.defineProperty) try {return void Object.defineProperty (b, c, {configurable:! 0, enumerable:! 0, get: function () {return d (f), e }, defina: função (a) {d (f), e = a}})} catch (g) {} a._definePropertyBroken =! 0, b [c] = e} a.migrateVersion = "1.4.1" ; var f = {}; a.migrateWarnings = [], b.console && b.console.log && b.console.log ("JQMIGRATE: Migrate está instalado" + (a.migrateMute? "": "com registro ativo") + " , versão "+ a.migrateVersion), a.migrateTrace === c && (a.migrateTrace =! 0), a.migrateReset = function () {f = {}, a.migrateWarnings.length = 0}, "BackCompat" === document.compatMode && d ("jQuery não é compatível com o modo Quirks"); var g = a ("<input / > ", {size: 1}). attr (" size ") && a.attrFn, h = a.attr, i = a.attrHooks.value && a.attrHooks.value.get || function () {return null}, j = a.attrHooks.value && a.attrHooks.value.set || function () {return c}, k = / ^ (?: input | button) $ / i, l = / ^ [238] $ /, m = / ^ (?: foco automático | reprodução automática | assíncrono | verificado | controles | adiar | desativado | oculto | loop | múltiplo | aberto | somente leitura | obrigatório | escopo | selecionado) $ / i, n = / ^ (?: verificado | selecionado) $ /i;e(a,"attrFn",g||{},"jQuery.attrFn está obsoleto "), a.attr = function (b, e, f, i) {var j = e.toLowerCase (), o = b && b.nodeType; return i && (h.length <4 && d ("jQuery.fn.attr (props, pass) está obsoleto"), b &&! l.test (o) && (g? e em g: a.isFunction (a.fn [e])))? a (b) [e] (f) :( "tipo" === e && f! == c && k. test (b.nodeName) && b.parentNode && d ("Não é possível alterar o 'tipo' de uma entrada ou botão no IE 6/7/8") ,! a.attrHooks [j] && m.test (j) && (a .attrHooks [j] = {get: function (b, d) {var e, f = a.prop (b, d); return f ===! 0 || "boolean"! = typeof f && (e = b .getAttributeNode (d)) && e.nodeValue! ==! 1? d.toLowerCase (): c}, set: function (b, c, d) {var e; return c ===! 1? a.removeAttr ( b, d) :( e = a.propFix [d] || d, e em b && (b [e] =! 0), b.setAttribute (d, d.toLowerCase ())), d}}, n .test (j) && d ("jQuery.fn.attr ('" + j + "') pode usar propriedade em vez de atributo")), h.call (a, b, e, f))}, a.attrHooks. value = {get: function (a, b) {var c = (a.nodeName || ""). toLowerCase (); return "button" === c? i.aplicar (isto, argumentos) :( "input"! == c && "option"! == c && d ("jQuery.fn.attr ('value') não obtém mais propriedades"), b in a? a.value: null )}, defina: function (a, b) {var c = (a.nodeName || ""). toLowerCase (); return "button" === c? j.apply (this, arguments) :( "input "! == c &&" option "! == c && d (" jQuery.fn.attr ('valor', val) não define mais as propriedades "), void (a.value = b))}}; var o, p, q = a.fn.init, r = a.find, s = a.parseJSON, t = / ^ \ s * </, u = / \ [(\ s * [- \ w] + \ s *) ( [~ | ^ $ *]? =) \ s * ([- \ w #] *? # [- \ w #] *) \ s * \] /, v = / \ [(\ s * [- \ w] + \ s *) ([~ | ^ $ *]? =) \ s * ([- \ w #] *? # [- \ w #] *) \ s * \] / g, w = / ^ ([^ <] *) (<[\ w \ W] +>) ([^>] *) $ /; a.fn.init = função (b, e, f) {var g, h; retornar b && "string" == typeof b &&! a.isPlainObject (e) && (g = w.exec (a.trim (b))) && g [0] && (t.test (b) || d ("$ (html) As strings HTML devem começar com '<' caractere"), g [3] && d ("$ (html) Texto HTML após a última tag ser ignorada"), "#" = == g [0] .charAt (0) && (d ("string HTML não pode começar com um caractere '#'"), a.error ("JQMIGRATE: string seletor inválido (XSS)")), e && e.context && e. context.nodeType && (e = e.context), a.parseHTML)? q.call (this, a.parseHTML (g [2], e && e.ownerDocument || e || document,! 0), e, f): (h = q.apply (this, argumentos), b && b.selector! == c? (h.selector = b.selector, h.context = b.context) :( h.selector = "string" == typeof b ? b: "", b && (h.context = b.nodeType? b: e || documento)), h)}, a.fn.init.prototype = a.fn, a.find = function (a) { var b = Array.prototype.slice.call (argumentos); if ("string" == typeof a && u.test (a)) try {document.querySelector (a)} catch (c) {a = a.replace (v, function (a, b, c, d) {return "[" + b + c + '"' + d + '"]'}); tente {document.querySelector (a), d ("Seletor de atributo com '#' deve ser citado:" + b [0]), b [0] = a} catch (e) {d ("Seletor de atributo com '#' não foi corrigido: "+ b [0])}} return r.apply (this, b)}; var x; for (x in r) Object.prototype.hasOwnProperty.call (r, x) && (a.find [x] = r [x]); a.parseJSON = function (a) {return a? s.apply (this, arguments) :( d ("jQuery.parseJSON requer uma string JSON válida"), null)}, a.uaMatch = function (a) {a = a.toLowerCase (); var b = / (chrome) [\ /] ([\ w.] +) /. exec (a) || / (webkit) [\ /] ([\ w.] +) /. exec (a) || / (opera) (?:. * versão |) [\ /] ([\ w.] +) /. exec (a) || / (msie) ([\ w.] +) /. exec (a) || a.indexOf ("compatível") <0 && / (mozilla) (?:. *? rv: ([\ w.] +) |) /. exec (a) || []; retornar {navegador: b [1] || "",versão: b [2] || "0"}}, a.browser || (o = a.uaMatch (navigator.userAgent), p = {}, o.browser && (p [o.browser] =! 0, p.version = o.version), p.chrome? p.webkit =! 0: p.webkit && (p.safari =! 0), a.browser = p), e (a, "navegador", a.browser , "jQuery.browser está obsoleto"), a.boxModel = a.support.boxModel = "CSS1Compat" === document.compatMode, e (a, "boxModel", a.boxModel, "jQuery.boxModel está obsoleto") , e (a.support, "boxModel", a.support.boxModel, "jQuery.support.boxModel está obsoleto"), a.sub = function () {function b (a, c) {return new b.fn. init (a, c)} a.extend (! 0, b, this), b.superclass = this, b.fn = b.prototype = this (), b.fn.constructor = b, b.sub = this .sub, b.fn.init = function (d, e) {var f = a.fn.init.call (this, d, e, c); retornar f instância de b? f: b (f)}, b .fn.init.prototype = b.fn; var c = b (documento); return d ("jQuery.sub () está obsoleto "), b}, a.fn.size = function () {return d (" jQuery.fn.size () está obsoleto; use a propriedade .length "), this.length}; var y =! 1; a.swap && a.each (["height", "width", "trustedMarginRight"], function (b, c) {var d = a.cssHooks [c] && a.cssHooks [c] .get; d && (a.cssHooks [c] .get = function () {var a; return y =! 0, a = d.apply (this, argumentos), y =! 1, a})}), a.swap = function (a, b, c, e) {var f, g, h = {}; y || d ("jQuery.swap () não está documentado e está obsoleto"); para (g em b) h [g] = a .style [g], a.style [g] = b [g]; f = c.apply (a, e || []); para (g em b) a.style [g] = h [g] ; return f}, a.ajaxSetup ({conversores: {"text json": a.parseJSON}}); var z = a.fn.data; a.fn.data = function (b) {var e, f, g = this [0]; return! g || "eventos"! == b || 1! == arguments.length || (e = a.data (g, b), f = a._data (g, b), e! == c && e! == f || f === c)? z.aplicar (isto, argumentos):(d ("O uso de jQuery.fn.data ('events') está obsoleto"), f)}; var A = / \ / (java | ecma) script / i; a.clean || (a.clean = function (b, c, e, f) {c = c || document, c =! c.nodeType && c [0] || c, c = c.ownerDocument || c, d ("jQuery.clean () está obsoleto "); var g, h, i, j, k = []; if (a.merge (k, a.buildFragment (b, c) .childNodes), e) para (i = função (a) {retorno! a.type || A.test (a.type)? f? f.push (a.parentNode? a.parentNode.removeChild (a): a): e.appendChild (a): void 0}, g = 0 ; null! = (h = k [g]); g ++) a.nodeName (h, "script") && i (h) || (e.appendChild (h), "undefined"! = typeof h.getElementsByTagName && (j = a.grep (a.merge ([], h.getElementsByTagName ("script")), i), k.splice.apply (k, [g + 1,0] .concat (j)), g + = j .length)); return k}); var B = a.event.add, C = a.event.remove, D = a.event.trigger, E = a.fn.toggle, F = a.fn.live , G = a.fn.die, H = a.fn.load, I = "ajaxStart | ajaxStop | ajaxSend | ajaxComplete | ajaxError | ajaxSuccess ", J = new RegExp (" \\ b (?: "+ I +") \\ b "), K = / (?: ^ | \ s) pairar (\ . \ S + |) \ b /, L = function (b) {return "string"! = Typeof b || a.event.special.hover? B: (K.test (b) && d ("'hover' pseudo -event está obsoleto, use 'mouseenter mouseleave' "), b && b.replace (K," mouseenter $ 1 mouseleave $ 1 "))}; a.event.props &&" attrChange "! == a.event.props [0] && a. event.props.unshift ("attrChange", "attrName", "relatedNode", "srcElement"), a.event.dispatch && e (a.event, "handle", a.event.dispatch, "jQuery.event.handle é não documentado e obsoleto "), a.event.add = function (a, b, c, e, f) {a! == document && J.test (b) && d (" Os eventos AJAX devem ser anexados ao documento: "+ b), B.call (this, a, L (b || ""), c, e, f)}, a.event.remove = function (a, b, c, d, e) {C. chamar (this, a, L (b) || "", c, d, e)}, a.each (["carregar", "descarregar", "erro"], função (b, c) {a. fn [c] = function () {var a = Array.prototype.slice.call (argumentos, 0); return "load" === c && "string" == typeof a [0]? H.apply (this, a) :( d ("jQuery.fn." + c + "() está obsoleto"), a.splice (0,0, c), arguments.length? this.bind.apply (this, a) :( this .triggerHandler.apply (this, a), this))}}), a.fn.toggle = function (b, c) {if (! a.isFunction (b) ||! a.isFunction (c)) return E.aplicar (this, argumentos); d ("jQuery.fn.toggle (manipulador, manipulador ...) está obsoleto"); var e = argumentos, f = b.guid || a.guid ++, g = 0, h = function (c) {var d = (a._data (this, "lastToggle" + b.guid) || 0)% g; retornar a._data (this, "lastToggle" + b.guid, d + 1 ), c.preventDefault (), e [d].aplicar (isto, argumentos) ||! 1}; para (h.guid = f; g <e.length;) e [g ++]. guid = f; retornar este.clique (h)}, a.fn.live = function (b, c, e) {return d ("jQuery.fn.live () está obsoleto"), F? F.apply (this, argumentos) :( a (this.context) .on (b, this .selector, c, e), this)}, a.fn.die = function (b, c) {return d ("jQuery.fn.die () is desatualizado"), G? G.apply (this, argumentos ) :( a (this.context) .off (b, this.selector || "**", c), this)}, a.event.trigger = function (a, b, c, e) {return c || J.test (a) || d ("Eventos globais não estão documentados e estão obsoletos"), D.call (this, a, b, c || document, e)}, a.each (I.split (" | "), function (b, c) {a.event.special [c] = {setup: function () {var b = this; return b! == document && (a.event.add (document, c +". "+ a.guid, function () {a.event.trigger (c, Array.prototype.slice.call (argumentos, 1), b,! 0)}), a._data (this, c, a.guid ++ )) ,! 1}, desmontagem:function () {return this! == document && a.event.remove (document, c + "." + a._data (this, c)) ,! 1}}}), a.event.special.ready = {setup: function () {this === document && d ("evento 'pronto' está obsoleto")}}; var M = a.fn.andSelf || a.fn.addBack, N = a.fn.find; if (a. fn.andSelf = function () {return d ("jQuery.fn.andSelf () substituído por jQuery.fn.addBack ()"), M.apply (this, argumentos)}, a.fn.find = function (a ) {var b = N.apply (this, argumentos); return b.context = this.context, b.selector = this.selector? this.selector + "" + a: a, b}, a.Callbacks) {var O = a.Deferred, P = [["resolver", "concluído", a.Callbacks ("uma vez na memória"), a.Callbacks ("uma vez na memória"), "resolvido"], ["rejeitar", "falhar ", a.Callbacks (" uma vez na memória "), a.Callbacks (" uma vez na memória ")," rejeitado "], [" notificar ","progress", a.Callbacks ("memory"), a.Callbacks ("memory")]]; a.Deferred = function (b) {var c = O (), e = c.promise (); return c .pipe = e.pipe = função () {var b = argumentos; return d ("deferred.pipe () está obsoleto"), a.Deferred (função (d) {a.each (P, função (f, g ) {var h = a.isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise )? b.promise (). done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise (): isso, h? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), " resolvido "=== c.state ()}, c.isRejected = function () {return d (" deferred.isRejected está obsoleto ")," rejeitado "=== c.state ()}, b && b.call (c , c), c}}} (jQuery, janela);Callbacks ("memory"), a.Callbacks ("memory")]]; a.Deferred = function (b) {var c = O (), e = c.promise (); return c.pipe = e.pipe = função () {var b = argumentos; return d ("deferred.pipe () está obsoleto"), a.Deferred (função (d) {a.each (P, função (f, g) {var h = a .isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (isto, argumentos); b && a.isFunction (b.promise)? b.promise ( ) .done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise (): this, h ? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c .state ()}, c.isRejected = function () {return d ("deferred.isRejected está obsoleto"), "rejeitado" === c.state ()}, b && b.call (c, c), c} }} (jQuery, janela);Callbacks ("memory"), a.Callbacks ("memory")]]; a.Deferred = function (b) {var c = O (), e = c.promise (); return c.pipe = e.pipe = função () {var b = argumentos; return d ("deferred.pipe () está obsoleto"), a.Deferred (função (d) {a.each (P, função (f, g) {var h = a .isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (isto, argumentos); b && a.isFunction (b.promise)? b.promise ( ) .done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise (): this, h ? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c .state ()}, c.isRejected = function () {return d ("deferred.isRejected está obsoleto"), "rejeitado" === c.state ()}, b && b.call (c, c), c} }} (jQuery, janela);Callbacks ("memory")]]; a.Deferred = function (b) {var c = O (), e = c.promise (); return c.pipe = e.pipe = function () {var b = arguments ; return d ("deferred.pipe () está obsoleto"), a.Deferred (function (d) {a.each (P, function (f, g) {var h = a.isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise)? b.promise (). done (d.resolve). falhar (d.rejeitar) .progress (d.notificar): d [g [0] + "Com"] (this === e? d.promise (): this, h? [b]: arguments)}) }), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c.state ()}, c.isRejected = function () {return d ("deferred.isRejected está obsoleto"), "rejeitado" === c.state ()}, b && b.call (c, c), c}}} (jQuery, janela);Callbacks ("memory")]]; a.Deferred = function (b) {var c = O (), e = c.promise (); return c.pipe = e.pipe = function () {var b = arguments ; return d ("deferred.pipe () está obsoleto"), a.Deferred (function (d) {a.each (P, function (f, g) {var h = a.isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise)? b.promise (). done (d.resolve). falhar (d.rejeitar) .progress (d.notificar): d [g [0] + "Com"] (this === e? d.promise (): this, h? [b]: arguments)}) }), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c.state ()}, c.isRejected = function () {return d ("deferred.isRejected está obsoleto"), "rejeitado" === c.state ()}, b && b.call (c, c), c}}} (jQuery, janela);tubo = e.pipe = função () {var b = argumentos; return d ("deferred.pipe () está obsoleto"), a.Deferred (função (d) {a.each (P, função (f, g) {var h = a.isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise) ? b.promise (). done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise ( ): isso, h? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido "=== c.state ()}, c.isRejected = function () {return d (" deferred.isRejected está obsoleto ")," rejeitado "=== c.state ()}, b && b.call (c, c), c}}} (jQuery, janela);tubo = e.pipe = função () {var b = argumentos; return d ("deferred.pipe () está obsoleto"), a.Deferred (função (d) {a.each (P, função (f, g) {var h = a.isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise) ? b.promise (). done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise ( ): isso, h? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido "=== c.state ()}, c.isRejected = function () {return d (" deferred.isRejected está obsoleto ")," rejeitado "=== c.state ()}, b && b.call (c, c), c}}} (jQuery, janela);isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise)? b.promise () .done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise (): this, h? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c. state ()}, c.isRejected = function () {return d ("deferred.isRejected is deprecated"), "rejeitado" === c.state ()}, b && b.call (c, c), c}} } (jQuery, janela);isFunction (b [f]) ​​&& b [f]; c [g [1]] (função () {var b = h && h.apply (this, argumentos); b && a.isFunction (b.promise)? b.promise () .done (d.resolve) .fail (d.reject) .progress (d.notify): d [g [0] + "With"] (this === e? d.promise (): this, h? [b]: argumentos)})}), b = null}). promessa ()}, c.isResolved = function () {return d ("deferred.isResolved está obsoleto"), "resolvido" === c. state ()}, c.isRejected = function () {return d ("deferred.isRejected is deprecated"), "rejeitado" === c.state ()}, b && b.call (c, c), c}} } (jQuery, janela);isResolved está obsoleto ")," resolvido "=== c.state ()}, c.isRejected = function () {return d (" deferred.isRejected está obsoleto ")," rejeitado "=== c.state () }, b && b.call (c, c), c}}} (jQuery, janela);isResolved está obsoleto ")," resolvido "=== c.state ()}, c.isRejected = function () {return d (" deferred.isRejected está obsoleto ")," rejeitado "=== c.state () }, b && b.call (c, c), c}}} (jQuery, janela);
